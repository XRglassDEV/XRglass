name: Release (standard-version, verified)

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump (auto | patch | minor | major)"
        required: false
        default: "auto"

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    # Injected by Codex using your GitHub ID → 235130906+XRglassDEV@users.noreply.github.com
    env:
      GIT_AUTHOR_NAME: MiaX
      GIT_AUTHOR_EMAIL: 235130906+XRglassDEV@users.noreply.github.com
      GIT_COMMITTER_NAME: MiaX
      GIT_COMMITTER_EMAIL: 235130906+XRglassDEV@users.noreply.github.com

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install
        run: npm ci

      - name: Typecheck
        run: npm run check

      - name: Build
        run: npm run build

      - name: Configure git identity (global + local)
        run: |
          set -euxo pipefail
          git config --global user.name  "$GIT_AUTHOR_NAME"
          git config --global user.email "$GIT_AUTHOR_EMAIL"
          git config        user.name  "$GIT_AUTHOR_NAME"
          git config        user.email "$GIT_AUTHOR_EMAIL"
          git var GIT_AUTHOR_IDENT
          git var GIT_COMMITTER_IDENT

      - name: Assert identity before release
        run: |
          set -e
          NAME=$(git config user.name || true)
          EMAIL=$(git config user.email || true)
          echo "Resolved identity → name='$NAME' email='$EMAIL'"
          test -n "$NAME" && test -n "$EMAIL"

      - name: Run standard-version
        id: sv
        shell: bash
        run: |
          set -e
          BUMP="${{ github.event.inputs.bump }}"
          if [ "${BUMP:-auto}" = "auto" ] || [ -z "$BUMP" ]; then
            npx standard-version -y || true
          else
            npx standard-version -y --release-as "$BUMP" || true
          fi
          # Skip cleanly if nothing changed
          if git diff --quiet && git diff --cached --quiet; then
            echo "skipped=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "tag=v$VERSION" >> "$GITHUB_OUTPUT"

      - name: Ensure push auth
        if: steps.sv.outputs.skipped != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euxo pipefail
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

      - name: Push tags and changes
        if: steps.sv.outputs.skipped != 'true'
        run: |
          set -euxo pipefail
          git push origin HEAD:main
          git push origin --tags

      - name: Create GitHub Release
        if: steps.sv.outputs.skipped != 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.sv.outputs.tag }}
          name: ${{ steps.sv.outputs.tag }}
          generate_release_notes: true
          files: |
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: No-op (nothing to release)
        if: steps.sv.outputs.skipped == 'true'
        run: echo "Release skipped (no conventional commits)."
