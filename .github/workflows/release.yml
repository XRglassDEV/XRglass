name: Release (standard-version)

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Bump type: auto | patch | minor | major"
        required: false
        default: "auto"
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install
        run: npm ci

      - name: Configure git identity (CI)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # Run standard-version; mark job as "skipped" instead of failing if no conventional commits
      - name: Bump version & generate changelog
        id: sv
        shell: bash
        run: |
          set -e
          BUMP="${{ github.event.inputs.bump }}"
          echo "Requested bump: ${BUMP:-auto}"

          run_sv () {
            if [ "${BUMP:-auto}" = "auto" ] || [ -z "${BUMP}" ]; then
              npx standard-version -y
            else
              npx standard-version -y --release-as "$BUMP"
            fi
          }

          if run_sv; then
            :
          else
            # standard-version exits non-zero when there are no new commits
            echo "No new commits matching Conventional Commits; skipping release."
            echo "skipped=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "tag=v$VERSION" >> "$GITHUB_OUTPUT"

      - name: Push tags and changes
        if: steps.sv.outputs.skipped != 'true'
        run: |
          git push --follow-tags origin HEAD:main

      - name: Build (sanity)
        if: steps.sv.outputs.skipped != 'true'
        run: npm run build

      - name: Create GitHub Release
        if: steps.sv.outputs.skipped != 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.sv.outputs.tag }}
          name: ${{ steps.sv.outputs.tag }}
          generate_release_notes: true
          files: |
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Nothing to release (no-op)
        if: steps.sv.outputs.skipped == 'true'
        run: echo "Release skipped (no conventional commits since last tag)."
