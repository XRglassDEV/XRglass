name: Release (standard-version)
on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump (auto | patch | minor | major)"
        required: false
        default: "auto"

jobs:
  release:
    env:
      GIT_AUTHOR_NAME: Volkan Kaymak
      GIT_AUTHOR_EMAIL: volkan@users.noreply.github.com
      GIT_COMMITTER_NAME: Volkan Kaymak
      GIT_COMMITTER_EMAIL: volkan@users.noreply.github.com
    permissions:
      contents: write   # allow pushing tags & changelog commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed so standard-version can see full history
          fetch-tags: true
          persist-credentials: true

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      # Safety: ensure repo still builds & types pass
      - run: npm run check
      - run: npm run build

      - name: Configure git identity (global + local)
        run: |
          git config --global user.name  "$GIT_AUTHOR_NAME"
          git config --global user.email "$GIT_AUTHOR_EMAIL"
          git config        user.name  "$GIT_AUTHOR_NAME"
          git config        user.email "$GIT_AUTHOR_EMAIL"
          git var GIT_AUTHOR_IDENT
          git var GIT_COMMITTER_IDENT

      # Determine bump strategy
      - name: Run standard-version
        id: sv
        env:
          BUMP: ${{ github.event.inputs.bump }}
        run: |
          if [ "${BUMP:-auto}" = "auto" ] || [ -z "${BUMP}" ]; then
            npx standard-version -y || true
          else
            npx standard-version -y --release-as "${BUMP}" || true
          fi
          if git diff --quiet && git diff --cached --quiet; then
            echo "skipped=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          VERSION="${TAG#v}"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Ensure push auth
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

      # Push changelog + tags back to the repo
      - name: Push tags and changes
        if: ${{ steps.sv.outputs.skipped != 'true' }}
        run: |
          git push --follow-tags origin HEAD:${GITHUB_REF#refs/heads/}

      # Create a GitHub Release from the tag (optional but nice)
      - name: Create GitHub Release
        if: ${{ steps.sv.outputs.skipped != 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.sv.outputs.tag }}
          name: ${{ steps.sv.outputs.tag }}
          generate_release_notes: true
          files: |
            CHANGELOG.md
