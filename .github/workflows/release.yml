name: Release (standard-version)

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump (auto | patch | minor | major)"
        required: false
        default: "auto"
  push:
    branches: [ main ]   # also run automatically on main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install
        run: npm ci

      - name: Typecheck
        run: npm run check

      - name: Build
        run: npm run build

      - name: Configure git identity (repo-local)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --list --show-origin | grep -E 'user.name|user.email' || true

      - name: Run standard-version
        id: sv
        shell: bash
        run: |
          set -e
          BUMP="${{ github.event.inputs.bump }}"
          if [ "${BUMP:-auto}" = "auto" ] || [ -z "$BUMP" ]; then
            npx standard-version -y || true
          else
            npx standard-version -y --release-as "$BUMP" || true
          fi
          # Skip cleanly when there are no matching commits
          if git diff --quiet && git diff --cached --quiet; then
            echo "skipped=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          VERSION=$(node -p "require('./package.json').version")
          echo "tag=v$VERSION" >> "$GITHUB_OUTPUT"

      - name: Ensure push auth (set origin with GITHUB_TOKEN)
        if: steps.sv.outputs.skipped != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git remote -v

      - name: Push tags and changes
        if: steps.sv.outputs.skipped != 'true'
        run: |
          git push origin HEAD:main
          git push origin --tags

      - name: Create GitHub Release
        if: steps.sv.outputs.skipped != 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.sv.outputs.tag }}
          name: ${{ steps.sv.outputs.tag }}
          generate_release_notes: true
          files: |
            CHANGELOG.md

      - name: No-op
        if: steps.sv.outputs.skipped == 'true'
        run: echo "Release skipped (no conventional commits)."
